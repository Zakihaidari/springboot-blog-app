@startuml

title Spring Boot Blog Application
caption Developed by Zaki Haidari

package com.springboot.blog.entity {
    class Post {
        - long id
        - String title
        - String description
        - String content
        - Set<Comment> comments
    }

    class Comment {
        - Long id
        - String name
        - String email
        - String body
        - Post post
    }

    class Category {
        - long id
        - String name
        - String description
    }

    Post --> Comment : "1..*"
    Category --> Post : "1..*"
}

package com.springboot.blog.payload {
    class PostDto {
        - long id
        - String title
        - String description
        - String content
    }

    class CommentDto {
        - Long id
        - String name
        - String email
        - String body
        - Long postId
    }

    class CategoryDto {
        - long id
        - String name
        - String description
    }

    class PostResponse {
        - List<PostDto> content
        - int pageNo
        - int pageSize
        - long totalElements
        - int totalPages
        - boolean last
    }

    class CommentResponse {
        - List<CommentDto> content
        - int pageNo
        - int pageSize
        - long totalElements
        - int totalPages
        - boolean last
    }

    class CategoryResponse {
        - List<CategoryDto> content
        - int pageNo
        - int pageSize
        - long totalElements
        - int totalPages
        - boolean last
    }
}

package com.springboot.blog.repository {
    interface PostRepository {
        + save(Post post)
        + findById(Long id)
        + findAll()
        + deleteById(Long id)
    }

    interface CommentRepository {
        + save(Comment comment)
        + findById(Long id)
        + findAll()
        + deleteById(Long id)
    }

    interface CategoryRepository {
        + save(Category category)
        + findById(Long id)
        + findAll()
        + deleteById(Long id)
    }
}

package com.springboot.blog.service {
    interface PostService {
        + createPost(PostDto postDto)
        + getAllPosts(int pageNo, int pageSize, String sortBy, String sortDir)
        + getPostById(long id)
        + updatePost(PostDto postDto, long id)
        + deletePostById(long id)
    }

    interface CommentService {
        + createComment(CommentDto commentDto)
        + getAllComments(int pageNo, int pageSize, String sortBy, String sortDir)
        + getCommentById(long id)
        + updateComment(CommentDto commentDto, long id)
        + deleteCommentById(long id)
    }

    interface CategoryService {
        + createCategory(CategoryDto categoryDto)
        + getAllCategories(int pageNo, int pageSize, String sortBy, String sortDir)
        + getCategoryById(long id)
        + updateCategory(CategoryDto categoryDto, long id)
        + deleteCategoryById(long id)
    }
}

package com.springboot.blog.controller {
    class PostController {
        + createPost(PostDto postDto)
        + getAllPosts(int pageNo, int pageSize, String sortBy, String sortDir)
        + getPostById(long id)
        + updatePost(PostDto postDto, long id)
        + deletePostById(long id)
    }

    class CommentController {
        + createComment(CommentDto commentDto)
        + getAllComments(int pageNo, int pageSize, String sortBy, String sortDir)
        + getCommentById(long id)
        + updateComment(CommentDto commentDto, long id)
        + deleteCommentById(long id)
    }

    class CategoryController {
        + createCategory(CategoryDto categoryDto)
        + getAllCategories(int pageNo, int pageSize, String sortBy, String sortDir)
        + getCategoryById(long id)
        + updateCategory(CategoryDto categoryDto, long id)
        + deleteCategoryById(long id)
    }
}

PostRepository --> Post
CommentRepository --> Comment
CategoryRepository --> Category

PostService --> PostRepository
CommentService --> CommentRepository
CategoryService --> CategoryRepository

PostController --> PostService
CommentController --> CommentService
CategoryController --> CategoryService

@enduml